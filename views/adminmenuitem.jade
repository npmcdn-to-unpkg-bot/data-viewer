doctype html
html
  head
   link(rel="stylesheet", href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css")

   script(src="https://npmcdn.com/react@15.3.0/dist/react.js")
   script(src="https://npmcdn.com/react-dom@15.3.0/dist/react-dom.js")
   script(src="https://npmcdn.com/babel-core@5.8.38/browser.min.js")
   script(src="https://npmcdn.com/jquery@3.1.0/dist/jquery.min.js")
   script(src="https://npmcdn.com/remarkable@1.6.2/dist/remarkable.min.js")
   script(src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js")
   meta(charset="utf-8")
   meta(name="viewport" content="width=device-width, initial-scale=1")

  title Valikon osan muokkaus
  link(rel='stylesheet', href='/stylesheets/style.css')
  body
   div(id="content" class="container-floating")
   script(type="text/babel").
    // MENUITEM DATA
    var MenuItemData = React.createClass({displayName: 'MenuItemData',    
    
    showError : function(errorTextToAdd) {this.setState({errorText : errorTextToAdd});},

    showMessage : function(msg) {this.setState({messageText: msg});
        $(".messageText").show();
    },

    loadMenuItem : function(menuItemId) {
        $.ajax({
            url : '/menuItemService/item/' + menuItemId,
            dataType: 'json',
            cache: false,
            timeout: 15000,

            success: function(data) {
                this.setState({menuitemtext : data.text,
                               functions : data.functions })
            }.bind(this),

            error: function(xhr, status, err) {
                this.showError('Tietosisällön haku epäonnistui.');
            }.bind(this)
        });//ajax             
    }, // loadMenuItems

    getInitialState: function() {
        return {
            menuitemtext: '',
            functions : [],
            errorText : '',
            messageText : ''
            };
    },

    componentDidMount: function() {
        if(this.props.menuItemId!='')
            this.loadMenuItem(this.props.menuItemId);
    },

    handleTextChange : function(e) {
            this.setState( { menuitemtext : e.target.value});
    },

    saveBasicData : function(e) {
        if(this.state.menuitemtext.length < 1) {
            this.showError('Teksti on pakollinen tieto.');
            return;
        }
        this.showError('');
        this.showMessage('');

        var reqUrl = '/menuItemService/' + this.props.menuItemId;
        var reqType = 'PUT';
        if(this.props.menuItemId=='') {
            reqUrl = '/menuItemService/';
            reqType = 'POST';
        }

        $.ajax({
            url : reqUrl,
            type: reqType,
            dataType: 'json',
            cache: false,
            timeout: 15000,
            data: {
                text: this.state.menuitemtext,
                systemId: this.props.systemId,
                parentItemId : this.props.parentId
                },

            success: function(data) {
                this.showMessage('Tiedot tallennettu.');
                if(this.props.menuItemId=='')
                    document.location='/admin/menuitem/'+data._id;
            }.bind(this),

            error: function(xhr, status, err) {
                this.showError('Tallennus epäonnistui.');
            }.bind(this)

        });//ajax
    },

    render : function() {
        return(
        <div>
            <div className="row">
                <div className="col-sm-12 systemName">
                    VALIKON OSAN MUOKKAUS 
                </div>
            </div>
            <div className="errorText">{this.state.errorText}</div>
            <div className="messageText">{this.state.messageText}</div>
            <div className="menuItem"> <a href={"/admin/system/" + this.props.systemId}> &lt;&lt; takaisin</a></div>
            <form className="basicDataForm">
                <div className="row">
                    <div className="col-sm-12 dataTitle">
                    PERUSTIEDOT
                    </div>
                </div>
                <div className="row">
                    <div className="col-sm-3 dataHeader">
                    Teksti
                    </div>
                    <div className="col-sm-6 dataEdit">
                        <input
                                type="text"
                                className="inputField"
                                size="40"
                                placeholder="Teksti"
                                value={this.state.menuitemtext}
                                onChange={this.handleTextChange}
                                />
                    </div>
                </div>
                <div className="row">
                    <div className="col-sm-3 dataHeader invisibleBg">
                    &nbsp;
                    </div>
                    <div className="col-sm-6 dataEdit" >
                    <button id="savebasicdata" type="button" className="btn btn-primary btn-sm" onClick={this.saveBasicData}>Tallenna perustiedot</button>
                    </div>
                </div>
            </form>
            <FunctionList menuItemId={this.props.menuItemId} systemId={this.props.systemId}/>
        </div>
        )
    }
    });

    // FUNCTION ITEM
    var FunctionItem = React.createClass({displayName: 'FunctionItem',

        showInfo : function(itemToShow) {
            $('#info_'+itemToShow._id).toggle();
        },

        redirectToEdit : function(itemToEdit) {
            window.location.href='/admin/function/' + itemToEdit._id;    
        },

        delete : function(itemToDelete) {
            this.props.onDeleteFunction(itemToDelete);
        },

        render : function() {

            return (
                <div className="row">
                    <div className="col-sm-3 dataHeader">
                        {this.props.func.ordernumber} : {this.props.func.moduleid}
                    </div>
                    <div className="col-sm-6 dataEdit">
                      <button id="info" type="button" className="btn btn-info btn-sm" onClick={this.showInfo.bind(this, this.props.func) }>Tiedot</button>
                      &nbsp;
                      <button id="edit" type="button" className="btn btn-primary btn-sm" onClick={this.redirectToEdit.bind(this, this.props.func) }>Muokkaa</button>
                      &nbsp;
                      <button id="delete" type="button" className="btn btn-danger btn-sm" onClick={this.delete.bind(this, this.props.func) }>Poista</button>
                      &nbsp;
                      <div id={'info_'+this.props.func._id} className = "infoBox" style={{display: 'none' }}>
                        <b>id</b> = {this.props.func._id}<br/>
                        <b>Järjestysnumero</b> = {this.props.func.ordernumber}<br/>
                        <b>Moduli</b> = {this.props.func.moduleid}<br/>
                        <b>Modulin parametrit</b> = <br/>
                        {JSON.stringify(this.props.func.moduleparameters, null, 2)}<br/>
                      </div>
                    </div>
                </div>
            );
        }
    });


    // FUNCTION LIST
    var FunctionList = React.createClass({displayName: 'FunctionList',

    showError : function(errorTextToAdd) {
        this.setState({errorText : errorTextToAdd});
    },

    showMessage : function(msg) {
            this.setState({messageText: msg});
            $(".messageText").show();
    },

    loadFunctions : function(menuitemid) {
            $.ajax({
                url : '/menuItemService/item/' + menuitemid,
                dataType: 'json',
                cache: false,
                timeout: 15000,

                success: function(data) {
                    this.setState({functions : data.functions})
                }.bind(this),

                error: function(xhr, status, err) {
                    this.showError('Tietosisällön haku epäonnistui.');
                }.bind(this)
            });//ajax             
        }, // loadFunctions

        getInitialState: function() {
            return {
                functions: [],
                messageText : '',
                errorText : ''
                };
        },

    componentDidMount: function() {
        if(this.props.menuItemId!='')
            this.loadFunctions(this.props.menuItemId);
    },

    onDeleteFunction : function(functionToDelete) {
        if(confirm('VAROITUS!\nPoistetaanko toiminto numero ' + functionToDelete.ordernumber + '?')) {
             $.ajax({
                url : ("/functionService/" + functionToDelete._id),
                type : 'DELETE',
                dataType: 'json',
                cache: false,
                timeout: 15000,                
                
                success: function(data) {
                    this.showMessage('Tiedot poistettu.');
                    this.loadFunctions(this.props.menuItemId);
                }.bind(this),

                error: function(xhr, status, err) {
                    this.showError('Poisto  epäonnistui.');
                }.bind(this)

            });//ajax
        } // onDeleteFunction
    },

    addNewFunction : function(func) {
        document.location = '/admin/add/function/' + this.props.menuItemId;
    },

    render : function() {
        var functions = this.state.functions.map(function(func) {
            return (
            <FunctionItem key={func._id} func={func} onDeleteFunction={this.onDeleteFunction} />
            );
        }, this);
        return (
            <div>
                <div className="row">
                    <div className="col-sm-12 dataTitle">
                    VALIKON OSAN TOIMINNOT
                    </div>
                </div>
                <div className="errorText">{this.state.errorText}</div>
                <div className="messageText">{this.state.messageText}</div>
                <div className="functions">
                    {functions}
                </div>
                <button id="addNewFunction" type="button" className="btn btn-primary btn-sm" onClick={this.addNewFunction}>Lisää uusi toiminto</button>
                <br/>
                <div className="menuItem"> <a href={"/admin/system/" + this.props.systemId}> &lt;&lt; takaisin</a></div>
            </div>
        );
    } // render
    }); // functionsList

    ReactDOM.render(
        <MenuItemData menuItemId='#{menuItemId}'systemId='#{systemId}' parentId='#{parentId}' />, 
        document.getElementById('content'));

